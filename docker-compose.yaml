version: "3"
networks:
  default:
    driver: bridge
services:
  #---------------------------------------------------------#
  # SERVICE: run (for production)
  # NOTE:
  # - env variables (credentials) copied to image!
  # - no mounting, as needs to work in production!
  #---------------------------------------------------------#
  prod:
    image: bot:prod
    container_name: bot_prod
    env_file: .env
    build: &build_deploy
      context: .
      dockerfile: Dockerfile
      target: stage-build
      args: &args_deploy
        PROJECT: "${docker_project}"
        MODE:    "deploy"
        USER:    "${docker_user}"
        WORKDIR: "${docker_workdir}"
        TOKEN:   "${token_prod}"
    command:
      [ "make", "run" ]
  #---------------------------------------------------------#
  # SERVICE: run (for staging)
  # NOTE:
  # - env variables (credentials) copied to image!
  # - no mounting, as needs to work in production!
  #---------------------------------------------------------#
  staging:
    image: bot:staging
    container_name: bot_staging
    env_file: .env
    build:
      <<: *build_deploy
      args:
        <<: *args_deploy
        TOKEN:   "${token_test}"
    command:
      [ "make", "run" ]
  #---------------------------------------------------------#
  # SERVICE: run (for production) with debug
  # NOTE: env variables (credentials) NOT copied to image!
  #---------------------------------------------------------#
  local:
    image: bot:local
    container_name: bot_local
    env_file: .env
    build: &build_local
      <<: *build_deploy
      target: stage-build-no-env
      args:
        <<:      *args_deploy
        MODE:    "local"
        TOKEN:   "${token}"
    volumes:
      - ./.env:${docker_workdir}/.env:ro
      - ./data:${docker_workdir}/data:rw
      - ./logs:${docker_workdir}/logs:rw
    command:
      [ "make", "run" ]
  #---------------------------------------------------------#
  # SERVICE: unit tests
  #---------------------------------------------------------#
  utests:
    image: bot:utests
    container_name: bot_utests
    env_file: .env
    build: *build_local
    volumes:
      - ./logs:${docker_workdir}/logs:rw
    command:
      [ "make", "tests-unit-logs" ]
  #---------------------------------------------------------#
  # SERVICE: integration tests
  # NOTE: use as follows:
  #    docker-compose up -d itests && docker attach bot_itests
  #---------------------------------------------------------#
  itests:
    image: bot:itests
    container_name: bot_itests
    env_file: .env
    depends_on:
      local:
        condition: service_started
    build: *build_local
    volumes:
      - ./.env:${docker_workdir}/.env:ro
      - ./secrets:${docker_workdir}/secrets:rw
      - ./data:${docker_workdir}/data:rw
      - ./logs:${docker_workdir}/logs:rw
    stdin_open: true
    tty: true
    command:
      [ "make", "tests-integration-logs" ]
